[0.000000] (-) TimerEvent: {}
[0.000642] (multi_lidar_calibrator) JobQueued: {'identifier': 'multi_lidar_calibrator', 'dependencies': OrderedDict()}
[0.000988] (multi_lidar_calibrator) JobStarted: {'identifier': 'multi_lidar_calibrator'}
[0.009974] (multi_lidar_calibrator) JobProgress: {'identifier': 'multi_lidar_calibrator', 'progress': 'cmake'}
[0.010545] (multi_lidar_calibrator) Command: {'cmd': ['/usr/bin/cmake', '/home/ykxn/Desktop/test/multi_lidar_calibrator', '-DCATKIN_INSTALL_INTO_PREFIX_ROOT=0', '-DCMAKE_INSTALL_PREFIX=/home/ykxn/Desktop/test/install/multi_lidar_calibrator'], 'cwd': '/home/ykxn/Desktop/test/build/multi_lidar_calibrator', 'env': OrderedDict([('APPCODE_VM_OPTIONS', '/home/ykxn/Music/jetbra/vmoptions/appcode.vmoptions'), ('GJS_DEBUG_TOPICS', 'JS ERROR;JS LOG'), ('LESSOPEN', '| /usr/bin/lesspipe %s'), ('GATEWAY_VM_OPTIONS', '/home/ykxn/Music/jetbra/vmoptions/gateway.vmoptions'), ('USER', 'ykxn'), ('LANGUAGE', 'en_US:en'), ('LC_TIME', 'zh_CN.UTF-8'), ('WEBSTORM_VM_OPTIONS', '/home/ykxn/Music/jetbra/vmoptions/webstorm.vmoptions'), ('TEXTDOMAIN', 'im-config'), ('XDG_SEAT', 'seat0'), ('WEBIDE_VM_OPTIONS', '/home/ykxn/Music/jetbra/vmoptions/webide.vmoptions'), ('SSH_AGENT_PID', '1781'), ('XDG_SESSION_TYPE', 'x11'), ('ROS_PACKAGE_PATH', '/opt/ros/melodic/share'), ('GIT_ASKPASS', '/usr/share/code/resources/app/extensions/git/dist/askpass.sh'), ('LD_LIBRARY_PATH', '/opt/ros/melodic/lib'), ('ROS_ETC_DIR', '/opt/ros/melodic/etc/ros'), ('SHLVL', '2'), ('CHROME_DESKTOP', 'code-url-handler.desktop'), ('QT4_IM_MODULE', 'xim'), ('HOME', '/home/ykxn'), ('DESKTOP_SESSION', 'ubuntu'), ('TERM_PROGRAM_VERSION', '1.85.2'), ('GIO_LAUNCHED_DESKTOP_FILE', '/usr/share/applications/code.desktop'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('VSCODE_GIT_ASKPASS_MAIN', '/usr/share/code/resources/app/extensions/git/dist/askpass-main.js'), ('ROS_PYTHON_VERSION', '2'), ('LC_MONETARY', 'zh_CN.UTF-8'), ('VSCODE_GIT_ASKPASS_NODE', '/usr/share/code/code'), ('DATASPELL_VM_OPTIONS', '/home/ykxn/Music/jetbra/vmoptions/dataspell.vmoptions'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('DATAGRIP_VM_OPTIONS', '/home/ykxn/Music/jetbra/vmoptions/datagrip.vmoptions'), ('IDEA_VM_OPTIONS', '/home/ykxn/Music/jetbra/vmoptions/idea.vmoptions'), ('COLORTERM', 'truecolor'), ('GIO_LAUNCHED_DESKTOP_FILE_PID', '2885'), ('CLION_VM_OPTIONS', '/home/ykxn/Music/jetbra/vmoptions/clion.vmoptions'), ('QT_QPA_PLATFORMTHEME', 'qt5ct'), ('IM_CONFIG_PHASE', '2'), ('ROS_DISTRO', 'melodic'), ('LOGNAME', 'ykxn'), ('GTK_IM_MODULE', 'ibus'), ('JETBRAINSCLIENT_VM_OPTIONS', '/home/ykxn/Music/jetbra/vmoptions/jetbrainsclient.vmoptions'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '1'), ('PKG_CONFIG_PATH', '/opt/ros/melodic/lib/pkgconfig'), ('STUDIO_VM_OPTIONS', '/home/ykxn/Music/jetbra/vmoptions/studio.vmoptions'), ('USERNAME', 'ykxn'), ('XDG_SESSION_ID', '3'), ('PHPSTORM_VM_OPTIONS', '/home/ykxn/Music/jetbra/vmoptions/phpstorm.vmoptions'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('WINDOWPATH', '2'), ('PATH', '/opt/ros/melodic/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'), ('RIDER_VM_OPTIONS', '/home/ykxn/Music/jetbra/vmoptions/rider.vmoptions'), ('PAPERSIZE', 'a4'), ('DEVECOSTUDIO_VM_OPTIONS', '/home/ykxn/Music/jetbra/vmoptions/devecostudio.vmoptions'), ('SESSION_MANAGER', 'local/ykxn-MINIPC-PN51-E1:@/tmp/.ICE-unix/1703,unix/ykxn-MINIPC-PN51-E1:/tmp/.ICE-unix/1703'), ('XDG_MENU_PREFIX', 'gnome-'), ('LC_ADDRESS', 'zh_CN.UTF-8'), ('GDK_BACKEND', 'x11'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':1'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'Unity'), ('LC_TELEPHONE', 'zh_CN.UTF-8'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GOLAND_VM_OPTIONS', '/home/ykxn/Music/jetbra/vmoptions/goland.vmoptions'), ('TERM_PROGRAM', 'vscode'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('ROS_ROOT', '/opt/ros/melodic/share/ros'), ('XMODIFIERS', '@im=ibus'), ('VSCODE_GIT_IPC_HANDLE', '/run/user/1000/vscode-git-dbabc1c805.sock'), ('ROSLISP_PACKAGE_DIRECTORIES', ''), ('XAUTHORITY', '/run/user/1000/gdm/Xauthority'), ('ORIGINAL_XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('LC_NAME', 'zh_CN.UTF-8'), ('SHELL', '/bin/bash'), ('QT_ACCESSIBILITY', '1'), ('ROS_MASTER_URI', 'http://localhost:11311'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('LC_MEASUREMENT', 'zh_CN.UTF-8'), ('PYCHARM_VM_OPTIONS', '/home/ykxn/Music/jetbra/vmoptions/pycharm.vmoptions'), ('TEXTDOMAINDIR', '/usr/share/locale/'), ('GJS_DEBUG_OUTPUT', 'stderr'), ('GPG_AGENT_INFO', '/run/user/1000/gnupg/S.gpg-agent:0:1'), ('LC_IDENTIFICATION', 'zh_CN.UTF-8'), ('VSCODE_GIT_ASKPASS_EXTRA_ARGS', '--ms-enable-electron-run-as-node'), ('XDG_VTNR', '2'), ('QT_IM_MODULE', 'ibus'), ('RUBYMINE_VM_OPTIONS', '/home/ykxn/Music/jetbra/vmoptions/rubymine.vmoptions'), ('PWD', '/home/ykxn/Desktop/test/build/multi_lidar_calibrator'), ('JETBRAINS_CLIENT_VM_OPTIONS', '/home/ykxn/Music/jetbra/vmoptions/jetbrains_client.vmoptions'), ('CLUTTER_IM_MODULE', 'xim'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('LC_NUMERIC', 'zh_CN.UTF-8'), ('PYTHONPATH', '/opt/ros/melodic/lib/python2.7/dist-packages'), ('LC_PAPER', 'zh_CN.UTF-8'), ('COLCON', '1'), ('CMAKE_PREFIX_PATH', '/opt/ros/melodic')]), 'shell': False}
[0.098462] (-) TimerEvent: {}
[0.179041] (multi_lidar_calibrator) StdoutLine: {'line': b'-- The C compiler identification is GNU 7.5.0\n'}
[0.198582] (-) TimerEvent: {}
[0.269682] (multi_lidar_calibrator) StdoutLine: {'line': b'-- The CXX compiler identification is GNU 7.5.0\n'}
[0.277120] (multi_lidar_calibrator) StdoutLine: {'line': b'-- Check for working C compiler: /usr/bin/cc\n'}
[0.298698] (-) TimerEvent: {}
[0.386416] (multi_lidar_calibrator) StdoutLine: {'line': b'-- Check for working C compiler: /usr/bin/cc -- works\n'}
[0.387984] (multi_lidar_calibrator) StdoutLine: {'line': b'-- Detecting C compiler ABI info\n'}
[0.398850] (-) TimerEvent: {}
[0.499279] (-) TimerEvent: {}
[0.500859] (multi_lidar_calibrator) StdoutLine: {'line': b'-- Detecting C compiler ABI info - done\n'}
[0.519520] (multi_lidar_calibrator) StdoutLine: {'line': b'-- Detecting C compile features\n'}
[0.599395] (-) TimerEvent: {}
[0.699790] (-) TimerEvent: {}
[0.800255] (-) TimerEvent: {}
[0.838833] (multi_lidar_calibrator) StdoutLine: {'line': b'-- Detecting C compile features - done\n'}
[0.846865] (multi_lidar_calibrator) StdoutLine: {'line': b'-- Check for working CXX compiler: /usr/bin/c++\n'}
[0.900364] (-) TimerEvent: {}
[0.966960] (multi_lidar_calibrator) StdoutLine: {'line': b'-- Check for working CXX compiler: /usr/bin/c++ -- works\n'}
[0.968965] (multi_lidar_calibrator) StdoutLine: {'line': b'-- Detecting CXX compiler ABI info\n'}
[1.000489] (-) TimerEvent: {}
[1.086787] (multi_lidar_calibrator) StdoutLine: {'line': b'-- Detecting CXX compiler ABI info - done\n'}
[1.100594] (-) TimerEvent: {}
[1.104622] (multi_lidar_calibrator) StdoutLine: {'line': b'-- Detecting CXX compile features\n'}
[1.200753] (-) TimerEvent: {}
[1.301197] (-) TimerEvent: {}
[1.401514] (-) TimerEvent: {}
[1.501985] (-) TimerEvent: {}
[1.602487] (-) TimerEvent: {}
[1.610166] (multi_lidar_calibrator) StdoutLine: {'line': b'-- Detecting CXX compile features - done\n'}
[1.620600] (multi_lidar_calibrator) StderrLine: {'line': b'CMake Error at CMakeLists.txt:4 (find_package):\n'}
[1.621109] (multi_lidar_calibrator) StderrLine: {'line': b'  By not providing "Findautoware_build_flags.cmake" in CMAKE_MODULE_PATH this\n'}
[1.621245] (multi_lidar_calibrator) StderrLine: {'line': b'  project has asked CMake to find a package configuration file provided by\n'}
[1.621355] (multi_lidar_calibrator) StderrLine: {'line': b'  "autoware_build_flags", but CMake did not find one.\n'}
[1.621507] (multi_lidar_calibrator) StderrLine: {'line': b'\n'}
[1.621615] (multi_lidar_calibrator) StderrLine: {'line': b'  Could not find a package configuration file provided by\n'}
[1.621789] (multi_lidar_calibrator) StderrLine: {'line': b'  "autoware_build_flags" with any of the following names:\n'}
[1.621937] (multi_lidar_calibrator) StderrLine: {'line': b'\n'}
[1.622044] (multi_lidar_calibrator) StderrLine: {'line': b'    autoware_build_flagsConfig.cmake\n'}
[1.622149] (multi_lidar_calibrator) StderrLine: {'line': b'    autoware_build_flags-config.cmake\n'}
[1.622253] (multi_lidar_calibrator) StderrLine: {'line': b'\n'}
[1.622357] (multi_lidar_calibrator) StderrLine: {'line': b'  Add the installation prefix of "autoware_build_flags" to CMAKE_PREFIX_PATH\n'}
[1.622463] (multi_lidar_calibrator) StderrLine: {'line': b'  or set "autoware_build_flags_DIR" to a directory containing one of the\n'}
[1.622620] (multi_lidar_calibrator) StderrLine: {'line': b'  above files.  If "autoware_build_flags" provides a separate development\n'}
[1.622812] (multi_lidar_calibrator) StderrLine: {'line': b'  package or SDK, be sure it has been installed.\n'}
[1.623036] (multi_lidar_calibrator) StderrLine: {'line': b'\n'}
[1.623241] (multi_lidar_calibrator) StderrLine: {'line': b'\n'}
[1.623391] (multi_lidar_calibrator) StdoutLine: {'line': b'-- Configuring incomplete, errors occurred!\n'}
[1.623890] (multi_lidar_calibrator) StdoutLine: {'line': b'See also "/home/ykxn/Desktop/test/build/multi_lidar_calibrator/CMakeFiles/CMakeOutput.log".\n'}
[1.624412] (multi_lidar_calibrator) CommandEnded: {'returncode': 1}
[1.664504] (multi_lidar_calibrator) JobEnded: {'identifier': 'multi_lidar_calibrator', 'rc': 1}
[1.675601] (-) EventReactorShutdown: {}
